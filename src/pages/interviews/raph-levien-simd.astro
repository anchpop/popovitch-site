---
import Layout from "../../layouts/Layout.astro";
import interview from "../../content/raph-levien-simd-transcript.json";
---

<Layout>
  <div class="interview-container">
    <div class="interview-content">
      <h1>The Future of SIMD, with Raph Levien</h1>

      <div class="video-container">
        <iframe
          width="560"
          height="315"
          src="https://www.youtube.com/embed/y0WcCUKxk50"
          title="The Future of SIMD with Raph Levien"
          frameborder="0"
          allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
          allowfullscreen
        >
        </iframe>
      </div>

      <div class="interview-details">
        <h2>About this Interview</h2>
        <p>
          This interview explores SIMD (Single Instruction, Multiple Data)
          programming in Rust, via an in-depth conversation with Raph Levien.
          The discussion covers what SIMD is, its applications, challenges when
          using it in Rust, and potential future improvements to make SIMD
          programming more accessible and safer.
        </p>
        <p>
          The interview was conducted without a script and has been lightly
          edited for clarity. Raph shares his extensive knowledge and vision for
          how SIMD programming could evolve in Rust, making this a valuable
          resource for anyone interested in high-performance computing.
        </p>

        <h2>About Raph Levien</h2>
        <p>
          Raph Levien is an engineer at Google Fonts and a prominent figure in
          the Rust community. He's known for his work on several significant
          Rust projects including Xilem, Vello, and Piet-GPU, which focus on
          high-performance 2D graphics rendering. Raph is also the creator of
          the popular monospaced font Inconsolata.
        </p>
        <p>
          With expertise in both CPU and GPU optimization, Raph has been
          exploring ways to improve SIMD programming in Rust. His earlier work
          includes "Fearless SIMD," a library that pioneered the encoding of
          SIMD safety invariants in Rust's type system. He continues to
          contribute to research on efficient rendering techniques, working on
          hybrid CPU/GPU approaches to vector graphics.
        </p>

        <div class="topics">
          <h3>Topics Covered:</h3>
          <ul>
            <li>
              SIMD basics: what it is and how it differs from SIMT (Single
              Instruction, Multiple Threads)
            </li>
            <li>
              The historical context of RISC vs. CISC instruction sets and how
              SIMD fits in
            </li>
            <li>
              Challenges of SIMD programming across different CPU architectures
            </li>
            <li>The evolution of SIMD intrinsics and compiler optimizations</li>
            <li>
              Safety concerns with SIMD in Rust and how they're being addressed
            </li>
            <li>Auto-vectorization and its capabilities in modern compilers</li>
            <li>
              Practical examples of SIMD operations like string manipulation
            </li>
            <li>
              Current Rust libraries for SIMD: FAER, Pulp, and Fearless SIMD
            </li>
            <li>The future of SIMD programming in Rust</li>
            <li>
              Applications of SIMD in graphics rendering and media processing
            </li>
            <li>Hybrid CPU/GPU approaches to vector graphics rendering</li>
          </ul>
        </div>

        <div class="transcript">
          <h2>Interview Transcript</h2>
          {
            interview.map((item) => {
              if (item.heading) {
                return <h3>{item.heading}</h3>;
              } else if (item.speaker) {
                return (
                  <p>
                    <span class="speaker">{item.speaker}</span>:{" "}
                    <span class="text">{item.text}</span>
                  </p>
                );
              }
            })
          }
        </div>

        <a href="/" class="back-button">‚Üê Back to Home</a>
      </div>
    </div>
  </div>

  <style>
    .interview-container {
      display: flex;
      justify-content: center;
      padding: 2rem 1rem;
      min-height: 100vh;
    }

    .interview-content {
      max-width: 800px;
      width: 100%;
      background-color: var(--card-bg);
      border-radius: 16px;
      padding: 2rem;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    }

    h1 {
      font-size: 2.5rem;
      margin: 0 0 1.5rem 0;
      background: linear-gradient(
        90deg,
        var(--accent-color),
        var(--secondary-color)
      );
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }

    h2 {
      font-size: 1.8rem;
      margin: 2rem 0 1rem;
      color: var(--text-color);
    }

    h3 {
      font-size: 1.4rem;
      margin: 1.5rem 0 0.75rem;
      color: var(--text-color);
    }

    p {
      margin: 1rem 0;
      font-size: 1.1rem;
      line-height: 1.6;
      color: var(--text-color);
    }

    .video-container {
      position: relative;
      padding-bottom: 56.25%; /* 16:9 aspect ratio */
      height: 0;
      overflow: hidden;
      margin: 2rem 0;
      border-radius: 8px;
    }

    .video-container iframe {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border-radius: 8px;
    }

    .interview-details {
      margin-top: 2rem;
    }

    ul {
      margin: 0.5rem 0 1.5rem 1.5rem;
    }

    li {
      margin: 0.5rem 0;
      font-size: 1.1rem;
      line-height: 1.5;
    }

    .topics {
      background-color: rgba(var(--accent-color-rgb, 50, 69, 255), 0.05);
      padding: 1.5rem;
      border-radius: 8px;
      margin: 2rem 0;
    }

    .transcript {
      margin-top: 3rem;
    }

    .transcript h3 {
      margin-top: 2rem;
      font-size: 1.5rem;
      color: var(--accent-color);
    }

    .transcript p {
      margin: 1rem 0;
      line-height: 1.7;
    }

    .transcript .speaker {
      font-weight: bold;
      display: inline;
    }

    .back-button {
      display: inline-block;
      margin-top: 2rem;
      padding: 0.75rem 1.5rem;
      background: linear-gradient(
        90deg,
        var(--accent-color),
        var(--secondary-color)
      );
      color: white;
      text-decoration: none;
      border-radius: 8px;
      font-weight: 500;
      transition:
        transform 0.2s ease,
        opacity 0.2s ease;
    }

    .back-button:hover {
      transform: translateY(-2px);
      opacity: 0.9;
    }

    @media (max-width: 768px) {
      .interview-content {
        padding: 1.5rem;
      }

      h1 {
        font-size: 2rem;
      }

      h2 {
        font-size: 1.5rem;
      }
    }
  </style>
</Layout>
